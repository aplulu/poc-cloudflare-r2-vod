// @generated by protoc-gen-es v1.8.0 with parameter "target=ts,import_extension=none"
// @generated from file nyantube/vod/v1/vod.proto (package nyantube.vod.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type {
  BinaryReadOptions,
  FieldList,
  JsonReadOptions,
  JsonValue,
  PartialMessage,
  PlainMessage,
} from '@bufbuild/protobuf';
import { Message, proto3 } from '@bufbuild/protobuf';

/**
 * @generated from message nyantube.vod.v1.GetVideoRequest
 */
export class GetVideoRequest extends Message<GetVideoRequest> {
  /**
   * @generated from field: string video_id = 1;
   */
  videoId = '';

  constructor(data?: PartialMessage<GetVideoRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = 'nyantube.vod.v1.GetVideoRequest';
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: 'video_id', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): GetVideoRequest {
    return new GetVideoRequest().fromBinary(bytes, options);
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): GetVideoRequest {
    return new GetVideoRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): GetVideoRequest {
    return new GetVideoRequest().fromJsonString(jsonString, options);
  }

  static equals(
    a: GetVideoRequest | PlainMessage<GetVideoRequest> | undefined,
    b: GetVideoRequest | PlainMessage<GetVideoRequest> | undefined
  ): boolean {
    return proto3.util.equals(GetVideoRequest, a, b);
  }
}

/**
 * @generated from message nyantube.vod.v1.GetVideoResponse
 */
export class GetVideoResponse extends Message<GetVideoResponse> {
  /**
   * @generated from field: string playlist_url = 1;
   */
  playlistUrl = '';

  /**
   * @generated from field: map<string, string> cookies = 2;
   */
  cookies: { [key: string]: string } = {};

  constructor(data?: PartialMessage<GetVideoResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = 'nyantube.vod.v1.GetVideoResponse';
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    {
      no: 1,
      name: 'playlist_url',
      kind: 'scalar',
      T: 9 /* ScalarType.STRING */,
    },
    {
      no: 2,
      name: 'cookies',
      kind: 'map',
      K: 9 /* ScalarType.STRING */,
      V: { kind: 'scalar', T: 9 /* ScalarType.STRING */ },
    },
  ]);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): GetVideoResponse {
    return new GetVideoResponse().fromBinary(bytes, options);
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): GetVideoResponse {
    return new GetVideoResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): GetVideoResponse {
    return new GetVideoResponse().fromJsonString(jsonString, options);
  }

  static equals(
    a: GetVideoResponse | PlainMessage<GetVideoResponse> | undefined,
    b: GetVideoResponse | PlainMessage<GetVideoResponse> | undefined
  ): boolean {
    return proto3.util.equals(GetVideoResponse, a, b);
  }
}
